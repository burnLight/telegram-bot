Node.js module to interact with official [Telegram Bot API](https://core.telegram.org/bots/api). A bot token is needed, to obtain one, talk to [@botfather](https://telegram.me/BotFather) and create a new bot. Based on Yagop [node-telegram-bot-api](https://github.com/yagop/node-telegram-bot-api) project.

```sh
npm install burnLight/telegram-bot
```

```js
var TelegramBot = require('./telegramBot');

// create new TelegramBot
var bot = new TelegramBot('YOUR_BOT_TOKEN_HERE');

// set WebHook with url and certificate
bot.setWebHook('IP:PORT/botBOT_TOKEN', __dirname+'/crt.pem');

// Matches /echo [whatever]
bot.onText(/echo (.+)/, function (msg, match) {
    var fromId = msg.from.id;
    var answer = {
        type: 'text',
        content: match[1]
    }
    bot.send(fromId, answer);
});

// Any kind of message
bot.on('message', function (msg) {
    var chatId = msg.chat.id;
    // media answer example
    var answer = {
        type: 'photo',
        content: __dirname+'/photo.jpg',
        options: {
            caption: 'great photo !' // options like caption here. 
            // See https://core.telegram.org/bots/api#available-methods for further info about options
        }
    }
    bot.send(chatId, answer);
});
```
* * *


### Events
Every time TelegramBot receives a message, it emits a `message`. Depending on which  [message](https://core.telegram.org/bots/api#message) was received, emits an event from this ones: `text`, `audio`, `document`, `photo`, `sticker`, `video`, `voice`, `contact`, `location`, `new_chat_participant`, `left_chat_participant`, `new_chat_title`, `new_chat_photo`, `delete_chat_photo`, `group_chat_created`. Its much better to listen a specific event rather than a `message` in order to stay safe from the content.
TelegramBot emits `inline_query` when receives an [Inline Query](https://core.telegram.org/bots/api#inlinequery) and `chosen_inline_result` when receives a [ChosenInlineResult](https://core.telegram.org/bots/api#choseninlineresult). Bot must be enabled on [inline mode](https://core.telegram.org/bots/api#inline-mode)
*By Yagop project*

### WebHooks

Telegram only supports HTTPS connections to WebHooks, in order to set a WebHook a private key file and public certificate must be used. Since August 29, 2015 Telegram supports self signed ones, to generate them:
```bash
# Our private cert will be key.pem, keep in private this file.
openssl genrsa -out key.pem 2048
# Our public certificate will be crt.pem
openssl req -new -sha256 -key key.pem -out crt.pem
```
Once they are generated, the `crt.pem` can be provided to `telegramBot.setWebHook(url, crt)` as `crt`.
*By Yagop project*

## API Reference
{{#class name="TelegramBot"~}}
{{>header~}}
{{>body~}}
{{>member-index~}}
{{>members~}}
{{/class}}
* * *

## License
telegram-bot is available under the [MIT license](https://opensource.org/licenses/MIT)